services:
  # web:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.local
  #   # image: nossas/cms:main
  #   networks:
  #     - bonde
  #   ports:
  #     - "80:8000"
  #   env_file:
  #     - .env-local
  #   depends_on:
  #     - db

  # db:
  #   image: postgres:latest
  #   restart: always
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=cms
  #   # logging:
  #   #   options:
  #   #     max-size: 10m
  #   #     max-file: "3"
  #   networks:
  #     - bonde
  #   ports:
  #     - '5432:5432'
  #   volumes:
  #     - /tmp/data:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus
    restart: 'no'
    user: root
    volumes:
      - /tmp/prometheus_data:/prometheus
      - ./deploy/prometheus.yml:/etc/prometheus/prometheus.yml
    # networks:
    #   - bonde
    # ports:
    #   - 9090:9090
    network_mode: "host"
    # depends_on:
    #   - web

  grafana:
    image: grafana/grafana
    user: root
    environment:
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
    restart: 'no'
    volumes:
      - /tmp/grafana_data:/var/lib/grafana
    # networks:
    #   - bonde
    # ports:
    #   - 3000:3000
    network_mode: "host"
    depends_on:
      - prometheus

  redis:
    image: redis:6.2-alpine
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    # ports:
    #   - '6379:6379'
    network_mode: "host"
    volumes:
      - /tmp/redis_data:/data

# networks:
#   bonde:
#     external: True